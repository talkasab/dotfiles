# vim: ft=ruby

# Setup Rails, if we're there
begin
  warn "Rails #{Rails.version} already loaded."
rescue NameError => e
  rails = File.join(Dir.getwd, 'config', 'environment.rb')
  if File.exist?(rails) 
    if ENV['SKIP_RAILS'].nil?
      require rails
      warn "=> Loading Rails (#{Rails.version})"
      if Rails.version[0..0] == '3'
        require 'rails/console/app'
        require 'rails/console/helpers'
        if Rails.version[2..2] == '2'
          extend Rails::ConsoleMethods
        end
      elsif Rails.version[0..0] == '2'
        require 'console_app'
        require 'console_with_helpers'
      else
        warn "=> Cannot load Rails console commands (Not on Rails2 or Rails3?)"
      end
    else
      warn "Not loading Rails because SKIP_RAILS is set."
    end
  else
    warn "Not in a Rails directory."
  end
end


# Setup awesome_print
begin
  require 'awesome_print'
  Pry.config.print = proc {|output, value| Pry::Helpers::BaseHelpers.stagger_output("=> #{value.ai}", output)}
rescue LoadError => err
  warn "=> Unable to load awesome_print"
end

begin
  require 'hirb'
  Hirb.enable

  old_print = Pry.config.print
  Pry.config.print = proc do |output, value|
    Hirb::View.view_or_page_output(value) || old_print.call(output, value)
  end
rescue LoadError => e
  warn "=> Unable to load Hirb"
end


# Setup interactive_editor
begin
  require 'interactive_editor'
rescue LoadError => e
  warn "=> Unable to load interactive_editor"
end

