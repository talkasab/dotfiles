# .bashrc
# Tarik Alkasab

# History Options

# Don't put duplicate lines in the history.
# export HISTCONTROL="ignoredups"

# Ignore some controlling instructions
export HISTIGNORE="[   ]*:&:bg:fg:exit"

# Aliases
alias h='history'
alias r='fc -s'

# Default to human readable figures
alias df='df -h'
alias du='du -h'

# Paging
export LESS="--long-prompt --raw-control-chars --squeeze-blank-lines --HILITE-UNREAD"
alias more='less'                          # raw control characters
alias whence='type -a'                        # where, of a sort
alias grep='grep --color'                     # show differences in colour
# Fancier Vim-enabled listings
alias vl='/usr/share/vim/vim72/macros/less.sh'

# Listings
alias ls='ls -hFG'                 # classify files in colour
alias dir='ls --color=auto --format=vertical'
alias vdir='ls --color=auto --format=long'
alias ll='ls -l'                              # long list
alias la='ls -A'                              # all but . and ..

# Tmux
alias t="if tmux has; then tmux attach; else tmux new; fi"

# Rails stuff (pre Rails 3)
alias sc="./script/console"
alias ss="./script/server"
alias sr="./script/runner"
alias sdb="./script/dbconsole -p"
alias sg="./script/generate"
alias tsc="RAILS_ENV=test ./script/console"
alias tss="RAILS_ENV=test ./script/server"
alias tsr="RAILS_ENV=test ./script/runner"
alias tsdb="RAILS_ENV=test ./script/dbconsole -p"

# Git stuff
alias gst='git status'
alias gb='git branch'
alias gba='git branch -a'
alias gco='git checkout'
if [ -f /opt/local/etc/bash_completion ]; then
  complete -o default -o nospace -F _git_checkout gco
  complete -o default -o nospace -F _git_branch gb
  complete -o default -o nospace -F _git_branch gba
fi

# RVM
[[ -s $HOME/.rvm/scripts/rvm ]] && source $HOME/.rvm/scripts/rvm

#autojump

_autojump() 
{
        local cur
        cur=${COMP_WORDS[*]:1}
        while read i
        do
            COMPREPLY=("${COMPREPLY[@]}" "${i}")
        done  < <(autojump --bash --completion $cur)
}
complete -F _autojump j
data_dir=$([ -e ~/.local/share ] && echo ~/.local/share || echo ~)
if [[ "$data_dir" = "${HOME}" ]]
then
    export AUTOJUMP_DATA_DIR=${data_dir}
else
    export AUTOJUMP_DATA_DIR=${data_dir}/autojump
fi
if [ ! -e "${AUTOJUMP_DATA_DIR}" ]
then
    mkdir "${AUTOJUMP_DATA_DIR}"
    mv ~/.autojump_py "${AUTOJUMP_DATA_DIR}/autojump_py" 2>>/dev/null #migration
    mv ~/.autojump_py.bak "${AUTOJUMP_DATA_DIR}/autojump_py.bak" 2>>/dev/null
    mv ~/.autojump_errors "${AUTOJUMP_DATA_DIR}/autojump_errors" 2>>/dev/null
fi

AUTOJUMP='{ (autojump -a "$(pwd -P)"&)>/dev/null 2>>${AUTOJUMP_DATA_DIR}/.autojump_errors;} 2>/dev/null'
if [[ ! $PROMPT_COMMAND =~ autojump ]]; then
  export PROMPT_COMMAND="${PROMPT_COMMAND:-:} ; $AUTOJUMP"
fi 
alias jumpstat="autojump --stat"
alias js="autojump --stat"
function j { new_path="$(autojump $@)";if [ -n "$new_path" ]; then echo -e "\\033[31m${new_path}\\033[0m"; cd "$new_path";fi }
